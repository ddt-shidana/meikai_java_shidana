/********************
 * 第1章			*
 *	 演習1-2（p20）	*
 *******************/

/* [アクセス修飾子]		public（一番広い）レベルで、
 * [メソッド]			～の処理を開始してください。
 * [引数]				プログラムファイル名「Ensyu1_2」
 */
//ここから紹介するクラスらは「ensy1_2」というグループになります。
package ensyu1_2;

/* [アクセス修飾子]		public（一番広い）レベルで、
 * [メソッド]			～の処理を開始してください。
 * [引数]				プログラムファイル名「Ensyu1_2」
 */
//↓ここから「Ensyu1_2」クラスの中に招待するメンバを順番に指示しますね。
//※メンバはメソッド・フィールド・コンストラクタ・innerクラスのどこかに所属しています。
public class Ensyu1_2 {

	/* [アクセス修飾子]		public（一番広い）レベルで、
	 * [static修飾子]		インスタンス化（=new）せずに使えるように、
	 * [メソッドの戻り値]	戻り値無しで、
	 * [メソッド]			～を他から呼ばれることは無く、一番最初に実行します。
	 * [引数]
	 * 		＜引数の型＞		～をstring型の配列で受け取ります。
	 * 		＜引数名＞			引数名「args」
	 */

//※コンストラクタ所属のメンバはいません。
//※ついでにinnerクラス所属のメンバもいません。

	/* 	＜補足＞引数の型を"String"にしている理由について
	 * 		私		がこの場で命令をするのに使っている道具は、
	 * 				人間界でいうと 文字・文字列（=String） と呼ばれています。
	 * 						ですので、
	 * 		あなた	がコマンドライン（キーボードだけで操作する画面(=CUI)上の入力行）から
	 * 				受け取るコードも、文字・文字列（=String）として扱ってもらいたいのです。
	 */
	public static void main(String[] args) {

	//※ここからmainメソッドの[引数]です。たくさん指示しますので順番に処理してくださいね。
		/* [メソッド]
		 * 	＜クラス＞	java.lngグループのSystemクラスにいる方をお呼びしてください。
		 * 		＜フィールド＞	Systemクラスの中でデータの値を保管するため
		 * 						outフィードという空間を使いましょう。
		 * 						保管するデータ値の型はPrintStreamクラス（java.ioグループ所属）です。
		 * 						PrintStreamクラスでは引数のデータ型毎にいくつかprintlnメソッドが用意されていましたね。
		 * 						こちらでどのprintlnメソッドを使えばよいかを伝えます。
		 * 			＜printlnメソッド＞	～を出力してください。
		 * [引数]
		 * 	「信（改行）太（改行）一（改行）那」
		 */
		System.out.println("信\n太\n一\n那");
	}

}
